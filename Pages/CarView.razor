@page "/{VIN}"
@inject HttpClient Http;

@if (Car != null)
{
    <div class="row">
        <img class="col-12 col-md-6" src="@Car.Path" style="width: auto; height:auto;">
        <div class="card col-12 col-md-6">
            <div class="card-header">
                @Car.Name
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">Price: $@Car.Price.ToString("N0")</li>
                <li class="list-group-item">Mileage: @Car.MileageString</li>
                <li class="list-group-item">Series: @Car.Series</li>
                <li class="list-group-item">VIN: @Car.VIN</li>
                <li class="list-group-item">Is Salvage: @Car.IsSalvage</li>
                <li class="list-group-item">Drive Type: @Car.DriveType</li>
                <li class="list-group-item">Vehicle Type: @Car.VehicleType</li>
                <li class="list-group-item">Displacement (L): @Car.Displacement</li>
                <li class="list-group-item">Number of Cylinders: @Car.NumCylinders</li>
                <li class="list-group-item">Number of Doors: @Car.NumDoors</li>
                <li class="list-group-item">Fuel Type: @Car.FuelType</li>
            </ul>
        </div>
    </div>
}


@functions {
    [Parameter]
    private string VIN { get; set; }
    private Car[] Cars;
    private Car Car { get; set; }

    protected override async Task OnInitAsync()
    {
        Cars = await Http.GetJsonAsync<Car[]>("./Data/cars.json");
        Car = Cars.Single(c => c.VIN == VIN);
        StateHasChanged();
    }
}
