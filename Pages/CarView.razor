@page "/car/{VIN}"
@inject HttpClient Http;

@if (Car != null)
{
    <div class="row">
        <img class="carimg col-12 col-lg-6" src="@Car.Path">
        <div class="card col-12 col-lg-6">
            <div class="card-header">
                @Car.Name
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">Price: $@Car.Price.ToString("N0")</li>
                <li class="list-group-item">Mileage: @Car.MileageString</li>
                <li class="list-group-item">Series: @Car.Series</li>
                <li class="list-group-item">VIN: @Car.VIN</li>
                <li class="list-group-item">Is Salvage: @Car.IsSalvage</li>
                <li class="list-group-item">Drive Type: @Car.DriveType</li>
                <li class="list-group-item">Vehicle Type: @Car.VehicleType</li>
                <li class="list-group-item">Displacement (L): @Car.Displacement</li>
                <li class="list-group-item">Number of Cylinders: @Car.NumCylinders</li>
                <li class="list-group-item">Number of Doors: @Car.NumDoors</li>
                <li class="list-group-item">Fuel Type: @Car.FuelType</li>
            </ul>
        </div>
    </div>
}
else
{

}


@functions {
    [Parameter]
    private string VIN { get; set; }
    [CascadingParameter]
    private Car[] Cars { get; set; }
    private Car Car = null;
    private int index = -1;

    protected override void OnInit()
    {
        for(int i = 0; i < Cars.Length; i++)
        {
            if (Cars[i].VIN == VIN)
            {
                Car = Cars[i];
                index = i;
                return;
            }
        }
    }
}
