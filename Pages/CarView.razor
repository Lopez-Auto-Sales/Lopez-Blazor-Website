@page "/{VIN}"
@inject HttpClient Http;
@inject IJSRuntime JSRuntime
@inject NavigationManager navManager

<div class="view ml-auto mr-auto">
    @if (CurrentCar != null)
    {
        <h1 class="card">@CurrentCar.Name</h1>
        <img class="img-top" src="@CurrentCar.Path">
        <ul>
            <li class="list-group-item" style="font-weight: bold">Price: $@CurrentCar.Price.ToString("N0")</li>
            <li class="list-group-item" style="font-weight: bold">Mileage: @CurrentCar.MileageString</li>
            <li class="list-group-item" style="font-weight: bold">VIN: @CurrentCar.VIN</li>
            @if (CurrentCar.IsSalvage)
            {
                <li class="list-group-item" style="font-weight: bold">Rebuilt Salvage Title</li>
            }
            @foreach (JSONExtra extraInfo in CurrentCar.Extras.OrderBy(extra => extra.Name))
            {
                <li class="list-group-item">@extraInfo.ToString()</li>
            }
        </ul>
        <div class="figures justify-content-between">
            @if (CarManager.Cars.Length != 1)
            {
                <button type="button" class="btn btn-light" @onclick="@(() => SwitchCar(false))">
                    <figure class="figure">
                        <figcaption class="figure-caption"><span class="oi oi-arrow-thick-left" /></figcaption>
                        <figcaption class="figure-caption">@PreviousCar.Name</figcaption>
                        <img src="@PreviousCar.Path" class="figure-img rounded" width="125">
                    </figure>
                </button>
                <button type="button" class="btn btn-light" @onclick="@(() => SwitchCar(true))">
                    <figure class="figure">
                        <figcaption class="figure-caption"><span class="oi oi-arrow-thick-right" /></figcaption>
                        <figcaption class="figure-caption">@NextCar.Name</figcaption>
                        <img src="@NextCar.Path" class="figure-img rounded" width="125">
                    </figure>
                </button>
            }
        </div>
    }
    else
    {
        <img class="img-top" src="./Images/lemon.png">
        <h2>The provided VIN (@VIN) in the URL doesn't seem to match any of our current vehicles.</h2>
        <h2>Go back to our main page to find the vehicle you expected or double check the URL.</h2>
    }
</div>


@functions {
    [Parameter]
    public string VIN { get; set; }
    [CascadingParameter]
    private CarManager CarManager { get; set; }
    private Car CurrentCar { get; set; }
    private Car PreviousCar { get; set; }
    private Car NextCar { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await JSRuntime.InvokeAsync<string>("scrollTo", 0, 0);
    }

    protected override void OnParametersSet()
    {
        int length = CarManager.Cars.Length;
        for (int i = 0; i < length; i++)
        {
            if (CarManager.Cars[i].VIN == VIN)
            {
                PreviousCar = CarManager.Cars[mod(i - 1, length)];
                CurrentCar = CarManager.Cars[i];
                NextCar = CarManager.Cars[mod(i + 1, length)];
                break;
            }
        }
    }

    private void SwitchCar(bool toNext)
    {
        if (toNext)
            navManager.NavigateTo("/" + NextCar.VIN);
        else
            navManager.NavigateTo("/" + PreviousCar.VIN);
    }

    int mod(int x, int m)
    {
        return (x % m + m) % m;
    }
}
